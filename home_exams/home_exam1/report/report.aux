\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\bibdata{reportNotes}
\bibstyle{apsrev4-1}
\citation{REVTEX41Control}
\citation{apsrev41Control}
\newlabel{FirstPage}{{}{1}{}{section*.1}{}}
\@writefile{toc}{\contentsline {title}{Home exam 1 - IN3200}{1}{section*.2}}
\@writefile{toc}{\contentsline {abstract}{Abstract}{1}{section*.1}}
\@writefile{toc}{\contentsline {section}{\numberline {I}Introduction}{1}{section*.3}}
\@writefile{toc}{\contentsline {section}{\numberline {II}Methods}{1}{section*.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {}Shellsort}{1}{section*.5}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {1}{\ignorespaces Shellsort (ascending order)}}{1}{algorithm.1}}
\newlabel{algo:metro}{{1}{1}{}{algorithm.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {III}Results}{1}{section*.6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {}Timing of serial codes}{1}{section*.7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {}Parallelized version of count\_mutual\_links1}{1}{section*.8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {}Parallelized version of count\_mutual\_links2}{1}{section*.9}}
\@writefile{lot}{\contentsline {table}{\numberline {I}{\ignorespaces The table shows the measured time using clock() from the Ctime-library. read\_graph\_from\_file1 and count\_mutual\_links1 was applied to a web-graph containing $N = 10000$ nodes and $N_\text  {links} = 37841$ edges as found in the file test\_webpages.txt. The data in this file was extracted from web-NotreDame.txt. read\_graph\_from\_file2 and count\_mutual\_links2 was applied directly to the web-graph contained in web-NotreDame.txt. This file contained $N = 325729$ nodes and $N_\text  {links} = 1479143$ edges.}}{1}{table.1}}
\newlabel{tab:serial_codes}{{I}{1}{The table shows the measured time using clock() from the Ctime-library. read\_graph\_from\_file1 and count\_mutual\_links1 was applied to a web-graph containing $N = 10000$ nodes and $N_\text {links} = 37841$ edges as found in the file test\_webpages.txt. The data in this file was extracted from web-NotreDame.txt. read\_graph\_from\_file2 and count\_mutual\_links2 was applied directly to the web-graph contained in web-NotreDame.txt. This file contained $N = 325729$ nodes and $N_\text {links} = 1479143$ edges}{table.1}{}}
\@writefile{lot}{\contentsline {table}{\numberline {II}{\ignorespaces The table presents the time used by the function count\_mutual\_links1 as a function of threads. The web-graph used contained $N = 10000$ nodes and $N_\text  {links} = 37841$ edges as found in the file test\_webpages.txt. The data in this file was extracted from web-NotreDame.txt. All times were measured using omp\_get\_wtime().}}{1}{table.2}}
\newlabel{tab:count_mutual_links1_parallel}{{II}{1}{The table presents the time used by the function count\_mutual\_links1 as a function of threads. The web-graph used contained $N = 10000$ nodes and $N_\text {links} = 37841$ edges as found in the file test\_webpages.txt. The data in this file was extracted from web-NotreDame.txt. All times were measured using omp\_get\_wtime()}{table.2}{}}
\@writefile{lot}{\contentsline {table}{\numberline {III}{\ignorespaces The table shows the time used by count\_mutual\_links2 when parallelized with OpenMP as a function of number of threads. The function was applied to the web-graph contained in web-NotreDame.txt containing $N = 325729$ nodes and $N_\text  {links} = 1479143$ edges.. The timing was done using the OpenMP library function omp\_get\_wtime().}}{1}{table.3}}
\newlabel{tab:count_mutual_links2_parallel}{{III}{1}{The table shows the time used by count\_mutual\_links2 when parallelized with OpenMP as a function of number of threads. The function was applied to the web-graph contained in web-NotreDame.txt containing $N = 325729$ nodes and $N_\text {links} = 1479143$ edges.. The timing was done using the OpenMP library function omp\_get\_wtime()}{table.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {IV}Discussion}{1}{section*.10}}
\@writefile{toc}{\contentsline {section}{\numberline {V}Conclusion}{1}{section*.11}}
\newlabel{LastPage}{{}{1}{}{}{}}
